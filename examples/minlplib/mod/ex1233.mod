#  MINLP written by GAMS Convert at 01/12/18 13:31:49
#  
#  Equation counts
#      Total        E        G        L        N        X        C        B
#         65       21        0       44        0        0        0        0
#  
#  Variable counts
#                   x        b        i      s1s      s2s       sc       si
#      Total     cont   binary  integer     sos1     sos2    scont     sint
#         53       41       12        0        0        0        0        0
#  FX      0        0        0        0        0        0        0        0
#  
#  Nonzero counts
#      Total    const       NL      DLL
#        221      193       28        0
# 
#  Reformulation has removed 1 variable and 1 equation


var x1 := 370, >= 370, <= 650;
var x2 := 370, >= 370, <= 650;
var x3 := 370, >= 370, <= 650;
var x4 := 370, >= 370, <= 590;
var x5 := 370, >= 370, <= 590;
var x6 := 370, >= 370, <= 590;
var x7 := 410, >= 410, <= 650;
var x8 := 410, >= 410, <= 650;
var x9 := 410, >= 410, <= 650;
var x10 := 350, >= 350, <= 500;
var x11 := 350, >= 350, <= 500;
var x12 := 350, >= 350, <= 500;
var x13 >= 0;
var x14 >= 0;
var x15 >= 0;
var x16 >= 0;
var x17 >= 0;
var x18 >= 0;
var x19 >= 0;
var x20 >= 0;
var x21 >= 0;
var x22 >= 0;
var x23 >= 0;
var x24 >= 0;
var x25 := 10, >= 10;
var x26 := 10, >= 10;
var x27 := 10, >= 10;
var x28 := 10, >= 10;
var x29 := 10, >= 10;
var x30 := 10, >= 10;
var x31 := 10, >= 10;
var x32 := 10, >= 10;
var x33 := 10, >= 10;
var x34 := 10, >= 10;
var x35 := 10, >= 10;
var x36 := 10, >= 10;
var x37 := 10, >= 10;
var x38 := 10, >= 10;
var x39 := 10, >= 10;
var x40 := 10, >= 10;
var b41 binary >= 0, <= 1;
var b42 binary >= 0, <= 1;
var b43 binary >= 0, <= 1;
var b44 binary >= 0, <= 1;
var b45 binary >= 0, <= 1;
var b46 binary >= 0, <= 1;
var b47 binary >= 0, <= 1;
var b48 binary >= 0, <= 1;
var b49 binary >= 0, <= 1;
var b50 binary >= 0, <= 1;
var b51 binary >= 0, <= 1;
var b52 binary >= 0, <= 1;

minimize obj: 300*x13/(0.5*x25*x26*(x25 + x26))**0.3333 + 300*x14/(0.5*x26*x27*
    (x26 + x27))**0.3333 + 300*x15/(0.5*x28*x29*(x28 + x29))**0.3333 + 300*x16/
    (0.5*x29*x30*(x29 + x30))**0.3333 + 300*x17/(0.5*x31*x32*(x31 + x32))**
    0.3333 + 300*x18/(0.5*x32*x33*(x32 + x33))**0.3333 + 300*x19/(0.5*x34*x35*(
    x34 + x35))**0.3333 + 300*x20/(0.5*x35*x36*(x35 + x36))**0.3333 + 300*x21/(
    35*x37*(70 + x37))**0.33333 + 300*x22/(35*x38*(70 + x38))**0.33333 + 180*
    x23/(15*x39*(30 + x39))**0.33333 + 180*x24/(90*x40*(180 + x40))**0.33333 + 
    80*x23 + 80*x24 + 15*x21 + 15*x22 + 5500*b41 + 5500*b42 + 5500*b43
     + 5500*b44 + 5500*b45 + 5500*b46 + 5500*b47 + 5500*b48 + 5500*b49
     + 5500*b50 + 5500*b51 + 5500*b52;

subject to

e2:    x13 + x14 + x15 + x16 + x21 = 2800;

e3:    x17 + x18 + x19 + x20 + x22 = 4400;

e4:    x13 + x14 + x17 + x18 + x23 = 3600;

e5:    x15 + x16 + x19 + x20 + x24 = 1950;

e6:    10*x1 - 10*x2 - x13 - x15 = 0;

e7:    10*x2 - 10*x3 - x14 - x16 = 0;

e8:    20*x4 - 20*x5 - x17 - x19 = 0;

e9:    20*x5 - 20*x6 - x18 - x20 = 0;

e10:    15*x7 - 15*x8 - x13 - x17 = 0;

e11:    15*x8 - 15*x9 - x14 - x18 = 0;

e12:    13*x10 - 13*x11 - x15 - x19 = 0;

e13:    13*x11 - 13*x12 - x16 - x20 = 0;

e14:    x1 = 650;

e15:    x4 = 590;

e16:    x9 = 410;

e17:    x12 = 350;

e18:  - x1 + x2 <= 0;

e19:  - x2 + x3 <= 0;

e20:  - x4 + x5 <= 0;

e21:  - x5 + x6 <= 0;

e22:  - x7 + x8 <= 0;

e23:  - x8 + x9 <= 0;

e24:  - x10 + x11 <= 0;

e25:  - x11 + x12 <= 0;

e26:  - x3 <= -370;

e27:  - x6 <= -370;

e28:    x7 <= 650;

e29:    x10 <= 500;

e30:    10*x3 - x21 = 3700;

e31:    20*x6 - x22 = 7400;

e32:    15*x7 + x23 = 9750;

e33:    13*x10 + x24 = 6500;

e34:    x13 - 2800*b41 <= 0;

e35:    x14 - 2800*b42 <= 0;

e36:    x15 - 1950*b43 <= 0;

e37:    x16 - 1950*b44 <= 0;

e38:    x17 - 3600*b45 <= 0;

e39:    x18 - 3600*b46 <= 0;

e40:    x19 - 1950*b47 <= 0;

e41:    x20 - 1950*b48 <= 0;

e42:    x21 - 2800*b49 <= 0;

e43:    x22 - 4400*b50 <= 0;

e44:    x23 - 3600*b51 <= 0;

e45:    x24 - 1950*b52 <= 0;

e46:  - x1 + x7 + x25 + 280*b41 <= 280;

e47:  - x2 + x8 + x26 + 130*b42 <= 130;

e48:  - x1 + x10 + x28 + 280*b43 <= 280;

e49:  - x2 + x11 + x29 + 150*b44 <= 150;

e50:  - x4 + x7 + x31 + 280*b45 <= 280;

e51:  - x5 + x8 + x32 + 130*b46 <= 130;

e52:  - x4 + x10 + x34 + 280*b47 <= 280;

e53:  - x5 + x11 + x35 + 150*b48 <= 150;

e54:  - x2 + x8 + x26 + 280*b41 <= 280;

e55:  - x3 + x9 + x27 + 130*b42 <= 130;

e56:  - x2 + x11 + x29 + 280*b43 <= 280;

e57:  - x3 + x12 + x30 + 150*b44 <= 150;

e58:  - x5 + x8 + x32 + 280*b45 <= 280;

e59:  - x6 + x9 + x33 + 130*b46 <= 130;

e60:  - x5 + x11 + x35 + 280*b47 <= 280;

e61:  - x6 + x12 + x36 + 150*b48 <= 150;

e62:  - x3 + x37 <= -320;

e63:  - x6 + x38 <= -320;

e64:    x7 + x39 <= 680;

e65:    x10 + x40 <= 680;
