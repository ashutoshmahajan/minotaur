#  MINLP written by GAMS Convert at 01/12/18 13:46:59
#  
#  Equation counts
#      Total        E        G        L        N        X        C        B
#         27       13        0       14        0        0        0        0
#  
#  Variable counts
#                   x        b        i      s1s      s2s       sc       si
#      Total     cont   binary  integer     sos1     sos2    scont     sint
#         91       25       66        0        0        0        0        0
#  FX      0        0        0        0        0        0        0        0
#  
#  Nonzero counts
#      Total    const       NL      DLL
#        256      142      114        0
# 
#  Reformulation has removed 1 variable and 1 equation


var x1 >= 0, <= 17;
var x2 := 49, >= 49, <= 64;
var x3 := 102, >= 102, <= 119;
var x4 := 42, >= 42, <= 50;
var x5 := 26, >= 26, <= 40;
var x6 := 65, >= 65, <= 84;
var x7 := 6, >= 6, <= 27;
var x8 := 74, >= 74, <= 86;
var x9 := 33, >= 33, <= 45;
var x10 := 37, >= 37, <= 53;
var x11 := 94, >= 94, <= 113;
var x12 >= 0, <= 14;
var x13 := 93, >= 93, <= 112;
var x14 := 56, >= 56, <= 70;
var x15 := 66, >= 66, <= 77;
var x16 := 87, >= 87, <= 96;
var x17 := 51, >= 51, <= 60;
var x18 := 12, >= 12, <= 26;
var x19 := 49, >= 49, <= 75;
var x20 := 41, >= 41, <= 54;
var x21 := 17, >= 17, <= 28;
var x22 := 25, >= 25, <= 43;
var x23 := 92, >= 92, <= 104;
var x24 := 79, >= 79, <= 88;
var b25 binary >= 0, <= 1;
var b26 binary >= 0, <= 1;
var b27 binary >= 0, <= 1;
var b28 binary >= 0, <= 1;
var b29 binary >= 0, <= 1;
var b30 binary >= 0, <= 1;
var b31 binary >= 0, <= 1;
var b32 binary >= 0, <= 1;
var b33 binary >= 0, <= 1;
var b34 binary >= 0, <= 1;
var b35 binary >= 0, <= 1;
var b36 binary >= 0, <= 1;
var b37 binary >= 0, <= 1;
var b38 binary >= 0, <= 1;
var b39 binary >= 0, <= 1;
var b40 binary >= 0, <= 1;
var b41 binary >= 0, <= 1;
var b42 binary >= 0, <= 1;
var b43 binary >= 0, <= 1;
var b44 binary >= 0, <= 1;
var b45 binary >= 0, <= 1;
var b46 binary >= 0, <= 1;
var b47 binary >= 0, <= 1;
var b48 binary >= 0, <= 1;
var b49 binary >= 0, <= 1;
var b50 binary >= 0, <= 1;
var b51 binary >= 0, <= 1;
var b52 binary >= 0, <= 1;
var b53 binary >= 0, <= 1;
var b54 binary >= 0, <= 1;
var b55 binary >= 0, <= 1;
var b56 binary >= 0, <= 1;
var b57 binary >= 0, <= 1;
var b58 binary >= 0, <= 1;
var b59 binary >= 0, <= 1;
var b60 binary >= 0, <= 1;
var b61 binary >= 0, <= 1;
var b62 binary >= 0, <= 1;
var b63 binary >= 0, <= 1;
var b64 binary >= 0, <= 1;
var b65 binary >= 0, <= 1;
var b66 binary >= 0, <= 1;
var b67 binary >= 0, <= 1;
var b68 binary >= 0, <= 1;
var b69 binary >= 0, <= 1;
var b70 binary >= 0, <= 1;
var b71 binary >= 0, <= 1;
var b72 binary >= 0, <= 1;
var b73 binary >= 0, <= 1;
var b74 binary >= 0, <= 1;
var b75 binary >= 0, <= 1;
var b76 binary >= 0, <= 1;
var b77 binary >= 0, <= 1;
var b78 binary >= 0, <= 1;
var b79 binary >= 0, <= 1;
var b80 binary >= 0, <= 1;
var b81 binary >= 0, <= 1;
var b82 binary >= 0, <= 1;
var b83 binary >= 0, <= 1;
var b84 binary >= 0, <= 1;
var b85 binary >= 0, <= 1;
var b86 binary >= 0, <= 1;
var b87 binary >= 0, <= 1;
var b88 binary >= 0, <= 1;
var b89 binary >= 0, <= 1;
var b90 binary >= 0, <= 1;

minimize obj: sqrt((x1 - x3)^2 + (x2 - x4)^2)*b25 + sqrt((x1 - x5)^2 + (x2 - x6
    )^2)*b26 + sqrt((x1 - x7)^2 + (x2 - x8)^2)*b27 + sqrt((x1 - x9)^2 + (x2 - 
    x10)^2)*b28 + sqrt((x1 - x11)^2 + (x2 - x12)^2)*b29 + sqrt((x1 - x13)^2 + (
    x2 - x14)^2)*b30 + sqrt((x1 - x15)^2 + (x2 - x16)^2)*b31 + sqrt((x1 - x17)^
    2 + (x2 - x18)^2)*b32 + sqrt((x1 - x19)^2 + (x2 - x20)^2)*b33 + sqrt((x1 - 
    x21)^2 + (x2 - x22)^2)*b34 + sqrt((x1 - x23)^2 + (x2 - x24)^2)*b35 + sqrt((
    x3 - x5)^2 + (x4 - x6)^2)*b36 + sqrt((x3 - x7)^2 + (x4 - x8)^2)*b37 + sqrt(
    (x3 - x9)^2 + (x4 - x10)^2)*b38 + sqrt((x3 - x11)^2 + (x4 - x12)^2)*b39 + 
    sqrt((x3 - x13)^2 + (x4 - x14)^2)*b40 + sqrt((x3 - x15)^2 + (x4 - x16)^2)*
    b41 + sqrt((x3 - x17)^2 + (x4 - x18)^2)*b42 + sqrt((x3 - x19)^2 + (x4 - x20
    )^2)*b43 + sqrt((x3 - x21)^2 + (x4 - x22)^2)*b44 + sqrt((x3 - x23)^2 + (x4
     - x24)^2)*b45 + sqrt((x5 - x7)^2 + (x6 - x8)^2)*b46 + sqrt((x5 - x9)^2 + (
    x6 - x10)^2)*b47 + sqrt((x5 - x11)^2 + (x6 - x12)^2)*b48 + sqrt((x5 - x13)^
    2 + (x6 - x14)^2)*b49 + sqrt((x5 - x15)^2 + (x6 - x16)^2)*b50 + sqrt((x5 - 
    x17)^2 + (x6 - x18)^2)*b51 + sqrt((x5 - x19)^2 + (x6 - x20)^2)*b52 + sqrt((
    x5 - x21)^2 + (x6 - x22)^2)*b53 + sqrt((x5 - x23)^2 + (x6 - x24)^2)*b54 + 
    sqrt((x7 - x9)^2 + (x8 - x10)^2)*b55 + sqrt((x7 - x11)^2 + (x8 - x12)^2)*
    b56 + sqrt((x7 - x13)^2 + (x8 - x14)^2)*b57 + sqrt((x7 - x15)^2 + (x8 - x16
    )^2)*b58 + sqrt((x7 - x17)^2 + (x8 - x18)^2)*b59 + sqrt((x7 - x19)^2 + (x8
     - x20)^2)*b60 + sqrt((x7 - x21)^2 + (x8 - x22)^2)*b61 + sqrt((x7 - x23)^2
     + (x8 - x24)^2)*b62 + sqrt((x9 - x11)^2 + (x10 - x12)^2)*b63 + sqrt((x9 - 
    x13)^2 + (x10 - x14)^2)*b64 + sqrt((x9 - x15)^2 + (x10 - x16)^2)*b65 + 
    sqrt((x9 - x17)^2 + (x10 - x18)^2)*b66 + sqrt((x9 - x19)^2 + (x10 - x20)^2)
    *b67 + sqrt((x9 - x21)^2 + (x10 - x22)^2)*b68 + sqrt((x9 - x23)^2 + (x10 - 
    x24)^2)*b69 + sqrt((x11 - x13)^2 + (x12 - x14)^2)*b70 + sqrt((x11 - x15)^2
     + (x12 - x16)^2)*b71 + sqrt((x11 - x17)^2 + (x12 - x18)^2)*b72 + sqrt((x11
     - x19)^2 + (x12 - x20)^2)*b73 + sqrt((x11 - x21)^2 + (x12 - x22)^2)*b74 + 
    sqrt((x11 - x23)^2 + (x12 - x24)^2)*b75 + sqrt((x13 - x15)^2 + (x14 - x16)^
    2)*b76 + sqrt((x13 - x17)^2 + (x14 - x18)^2)*b77 + sqrt((x13 - x19)^2 + (
    x14 - x20)^2)*b78 + sqrt((x13 - x21)^2 + (x14 - x22)^2)*b79 + sqrt((x13 - 
    x23)^2 + (x14 - x24)^2)*b80 + sqrt((x15 - x17)^2 + (x16 - x18)^2)*b81 + 
    sqrt((x15 - x19)^2 + (x16 - x20)^2)*b82 + sqrt((x15 - x21)^2 + (x16 - x22)^
    2)*b83 + sqrt((x15 - x23)^2 + (x16 - x24)^2)*b84 + sqrt((x17 - x19)^2 + (
    x18 - x20)^2)*b85 + sqrt((x17 - x21)^2 + (x18 - x22)^2)*b86 + sqrt((x17 - 
    x23)^2 + (x18 - x24)^2)*b87 + sqrt((x19 - x21)^2 + (x20 - x22)^2)*b88 + 
    sqrt((x19 - x23)^2 + (x20 - x24)^2)*b89 + sqrt((x21 - x23)^2 + (x22 - x24)^
    2)*b90;

subject to

e2: 0.013840830449827*x1^2 - 0.235294117647059*x1 + 0.0177777777777778*x2^2 - 
    2.00888888888889*x2 <= -56.7511111111111;

e3: 0.013840830449827*x3^2 - 3.05882352941176*x3 + 0.0625*x4^2 - 5.75*x4
     <= -300.25;

e4: 0.0204081632653061*x5^2 - 1.3469387755102*x5 + 0.0110803324099723*x6^2 - 
    1.65096952908587*x6 <= -82.7231047543671;

e5: 0.0090702947845805*x7^2 - 0.299319727891156*x7 + 0.0277777777777778*x8^2 - 
    4.44444444444444*x8 <= -179.24716553288;

e6: 0.0277777777777778*x9^2 - 2.16666666666667*x9 + 0.015625*x10^2 - 1.40625*
    x10 <= -72.890625;

e7: 0.0110803324099723*x11^2 - 2.29362880886427*x11 + 0.0204081632653061*x12^2
     - 0.285714285714286*x12 <= -118.695290858726;

e8: 0.0110803324099723*x13^2 - 2.27146814404432*x13 + 0.0204081632653061*x14^2
     - 2.57142857142857*x14 <= -196.412742382271;

e9: 0.0330578512396694*x15^2 - 4.72727272727273*x15 + 0.0493827160493827*x16^2
     - 9.03703703703704*x16 <= -581.444444444444;

e10: 0.0493827160493827*x17^2 - 5.48148148148148*x17 + 0.0204081632653061*x18^2
      - 0.775510204081633*x18 <= -158.478458049887;

e11: 0.00591715976331361*x19^2 - 0.733727810650888*x19 + 0.0236686390532544*x20
     ^2 - 2.24852071005917*x20 <= -75.1479289940828;

e12: 0.0330578512396694*x21^2 - 1.48760330578512*x21 + 0.0123456790123457*x22^2
      - 0.839506172839506*x22 <= -30.0071421283542;

e13: 0.0277777777777778*x23^2 - 5.44444444444444*x23 + 0.0493827160493827*x24^2
      - 8.24691358024691*x24 <= -610.086419753086;

e14:    b25 + b26 + b27 + b28 + b29 + b30 + b31 + b32 + b33 + b34 + b35 = 2;

e15:    b25 + b36 + b37 + b38 + b39 + b40 + b41 + b42 + b43 + b44 + b45 = 2;

e16:    b26 + b36 + b46 + b47 + b48 + b49 + b50 + b51 + b52 + b53 + b54 = 2;

e17:    b27 + b37 + b46 + b55 + b56 + b57 + b58 + b59 + b60 + b61 + b62 = 2;

e18:    b28 + b38 + b47 + b55 + b63 + b64 + b65 + b66 + b67 + b68 + b69 = 2;

e19:    b29 + b39 + b48 + b56 + b63 + b70 + b71 + b72 + b73 + b74 + b75 = 2;

e20:    b30 + b40 + b49 + b57 + b64 + b70 + b76 + b77 + b78 + b79 + b80 = 2;

e21:    b31 + b41 + b50 + b58 + b65 + b71 + b76 + b81 + b82 + b83 + b84 = 2;

e22:    b32 + b42 + b51 + b59 + b66 + b72 + b77 + b81 + b85 + b86 + b87 = 2;

e23:    b33 + b43 + b52 + b60 + b67 + b73 + b78 + b82 + b85 + b88 + b89 = 2;

e24:    b34 + b44 + b53 + b61 + b68 + b74 + b79 + b83 + b86 + b88 + b90 = 2;

e25:    b35 + b45 + b54 + b62 + b69 + b75 + b80 + b84 + b87 + b89 + b90 = 2;

e26:    b26 + b27 + b34 + b46 + b53 + b61 <= 3;

e27:    b26 + b27 + b46 <= 2;
