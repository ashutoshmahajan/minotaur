#  MINLP written by GAMS Convert at 01/12/18 13:46:59
#  
#  Equation counts
#      Total        E        G        L        N        X        C        B
#         22       11        0       11        0        0        0        0
#  
#  Variable counts
#                   x        b        i      s1s      s2s       sc       si
#      Total     cont   binary  integer     sos1     sos2    scont     sint
#         66       21       45        0        0        0        0        0
#  FX      0        0        0        0        0        0        0        0
#  
#  Nonzero counts
#      Total    const       NL      DLL
#        179       94       85        0
# 
#  Reformulation has removed 1 variable and 1 equation


var x1 := 69, >= 69, <= 72;
var x2 := 7, >= 7, <= 20;
var x3 := 109, >= 109, <= 123;
var x4 := 76, >= 76, <= 87;
var x5 := 42, >= 42, <= 61;
var x6 := 63, >= 63, <= 72;
var x7 := 93, >= 93, <= 103;
var x8 := 60, >= 60, <= 68;
var x9 := 80, >= 80, <= 95;
var x10 >= 0, <= 17;
var x11 := 69, >= 69, <= 90;
var x12 := 91, >= 91, <= 101;
var x13 := 44, >= 44, <= 55;
var x14 := 53, >= 53, <= 61;
var x15 := 65, >= 65, <= 80;
var x16 := 89, >= 89, <= 110;
var x17 := 118, >= 118, <= 123;
var x18 := 20, >= 20, <= 42;
var x19 := 78, >= 78, <= 89;
var x20 := 32, >= 32, <= 45;
var b21 binary >= 0, <= 1;
var b22 binary >= 0, <= 1;
var b23 binary >= 0, <= 1;
var b24 binary >= 0, <= 1;
var b25 binary >= 0, <= 1;
var b26 binary >= 0, <= 1;
var b27 binary >= 0, <= 1;
var b28 binary >= 0, <= 1;
var b29 binary >= 0, <= 1;
var b30 binary >= 0, <= 1;
var b31 binary >= 0, <= 1;
var b32 binary >= 0, <= 1;
var b33 binary >= 0, <= 1;
var b34 binary >= 0, <= 1;
var b35 binary >= 0, <= 1;
var b36 binary >= 0, <= 1;
var b37 binary >= 0, <= 1;
var b38 binary >= 0, <= 1;
var b39 binary >= 0, <= 1;
var b40 binary >= 0, <= 1;
var b41 binary >= 0, <= 1;
var b42 binary >= 0, <= 1;
var b43 binary >= 0, <= 1;
var b44 binary >= 0, <= 1;
var b45 binary >= 0, <= 1;
var b46 binary >= 0, <= 1;
var b47 binary >= 0, <= 1;
var b48 binary >= 0, <= 1;
var b49 binary >= 0, <= 1;
var b50 binary >= 0, <= 1;
var b51 binary >= 0, <= 1;
var b52 binary >= 0, <= 1;
var b53 binary >= 0, <= 1;
var b54 binary >= 0, <= 1;
var b55 binary >= 0, <= 1;
var b56 binary >= 0, <= 1;
var b57 binary >= 0, <= 1;
var b58 binary >= 0, <= 1;
var b59 binary >= 0, <= 1;
var b60 binary >= 0, <= 1;
var b61 binary >= 0, <= 1;
var b62 binary >= 0, <= 1;
var b63 binary >= 0, <= 1;
var b64 binary >= 0, <= 1;
var b65 binary >= 0, <= 1;

minimize obj: sqrt((x1 - x3)^2 + (x2 - x4)^2)*b21 + sqrt((x1 - x5)^2 + (x2 - x6
    )^2)*b22 + sqrt((x1 - x7)^2 + (x2 - x8)^2)*b23 + sqrt((x1 - x9)^2 + (x2 - 
    x10)^2)*b24 + sqrt((x1 - x11)^2 + (x2 - x12)^2)*b25 + sqrt((x1 - x13)^2 + (
    x2 - x14)^2)*b26 + sqrt((x1 - x15)^2 + (x2 - x16)^2)*b27 + sqrt((x1 - x17)^
    2 + (x2 - x18)^2)*b28 + sqrt((x1 - x19)^2 + (x2 - x20)^2)*b29 + sqrt((x3 - 
    x5)^2 + (x4 - x6)^2)*b30 + sqrt((x3 - x7)^2 + (x4 - x8)^2)*b31 + sqrt((x3
     - x9)^2 + (x4 - x10)^2)*b32 + sqrt((x3 - x11)^2 + (x4 - x12)^2)*b33 + 
    sqrt((x3 - x13)^2 + (x4 - x14)^2)*b34 + sqrt((x3 - x15)^2 + (x4 - x16)^2)*
    b35 + sqrt((x3 - x17)^2 + (x4 - x18)^2)*b36 + sqrt((x3 - x19)^2 + (x4 - x20
    )^2)*b37 + sqrt((x5 - x7)^2 + (x6 - x8)^2)*b38 + sqrt((x5 - x9)^2 + (x6 - 
    x10)^2)*b39 + sqrt((x5 - x11)^2 + (x6 - x12)^2)*b40 + sqrt((x5 - x13)^2 + (
    x6 - x14)^2)*b41 + sqrt((x5 - x15)^2 + (x6 - x16)^2)*b42 + sqrt((x5 - x17)^
    2 + (x6 - x18)^2)*b43 + sqrt((x5 - x19)^2 + (x6 - x20)^2)*b44 + sqrt((x7 - 
    x9)^2 + (x8 - x10)^2)*b45 + sqrt((x7 - x11)^2 + (x8 - x12)^2)*b46 + sqrt((
    x7 - x13)^2 + (x8 - x14)^2)*b47 + sqrt((x7 - x15)^2 + (x8 - x16)^2)*b48 + 
    sqrt((x7 - x17)^2 + (x8 - x18)^2)*b49 + sqrt((x7 - x19)^2 + (x8 - x20)^2)*
    b50 + sqrt((x9 - x11)^2 + (x10 - x12)^2)*b51 + sqrt((x9 - x13)^2 + (x10 - 
    x14)^2)*b52 + sqrt((x9 - x15)^2 + (x10 - x16)^2)*b53 + sqrt((x9 - x17)^2 + 
    (x10 - x18)^2)*b54 + sqrt((x9 - x19)^2 + (x10 - x20)^2)*b55 + sqrt((x11 - 
    x13)^2 + (x12 - x14)^2)*b56 + sqrt((x11 - x15)^2 + (x12 - x16)^2)*b57 + 
    sqrt((x11 - x17)^2 + (x12 - x18)^2)*b58 + sqrt((x11 - x19)^2 + (x12 - x20)^
    2)*b59 + sqrt((x13 - x15)^2 + (x14 - x16)^2)*b60 + sqrt((x13 - x17)^2 + (
    x14 - x18)^2)*b61 + sqrt((x13 - x19)^2 + (x14 - x20)^2)*b62 + sqrt((x15 - 
    x17)^2 + (x16 - x18)^2)*b63 + sqrt((x15 - x19)^2 + (x16 - x20)^2)*b64 + 
    sqrt((x17 - x19)^2 + (x18 - x20)^2)*b65;

subject to

e2: 0.444444444444444*x1^2 - 62.6666666666667*x1 + 0.0236686390532544*x2^2 - 
    0.63905325443787*x2 <= -2212.31360946746;

e3: 0.0204081632653061*x3^2 - 4.73469387755102*x3 + 0.0330578512396694*x4^2 - 
    5.38842975206612*x4 <= -493.190757294653;

e4: 0.0110803324099723*x5^2 - 1.14127423822715*x5 + 0.0493827160493827*x6^2 - 
    6.66666666666667*x6 <= -253.387811634349;

e5: 0.04*x7^2 - 7.84*x7 + 0.0625*x8^2 - 8*x8 <= -639.16;

e6: 0.0177777777777778*x9^2 - 3.11111111111111*x9 + 0.013840830449827*x10^2 - 
    0.235294117647059*x10 <= -136.111111111111;

e7: 0.0090702947845805*x11^2 - 1.4421768707483*x11 + 0.04*x12^2 - 7.68*x12
     <= -424.966530612245;

e8: 0.0330578512396694*x13^2 - 3.27272727272727*x13 + 0.0625*x14^2 - 7.125*x14
     <= -283.0625;

e9: 0.0177777777777778*x15^2 - 2.57777777777778*x15 + 0.0090702947845805*x16^2
     - 1.80498866213152*x16 <= -182.242630385488;

e10: 0.16*x17^2 - 38.56*x17 + 0.00826446280991736*x18^2 - 0.512396694214876*x18
      <= -2330.18214876033;

e11: 0.0330578512396694*x19^2 - 5.52066115702479*x19 + 0.0236686390532544*x20^2
      - 1.82248520710059*x20 <= -264.570443542472;

e12:    b21 + b22 + b23 + b24 + b25 + b26 + b27 + b28 + b29 = 2;

e13:    b21 + b30 + b31 + b32 + b33 + b34 + b35 + b36 + b37 = 2;

e14:    b22 + b30 + b38 + b39 + b40 + b41 + b42 + b43 + b44 = 2;

e15:    b23 + b31 + b38 + b45 + b46 + b47 + b48 + b49 + b50 = 2;

e16:    b24 + b32 + b39 + b45 + b51 + b52 + b53 + b54 + b55 = 2;

e17:    b25 + b33 + b40 + b46 + b51 + b56 + b57 + b58 + b59 = 2;

e18:    b26 + b34 + b41 + b47 + b52 + b56 + b60 + b61 + b62 = 2;

e19:    b27 + b35 + b42 + b48 + b53 + b57 + b60 + b63 + b64 = 2;

e20:    b28 + b36 + b43 + b49 + b54 + b58 + b61 + b63 + b65 = 2;

e21:    b29 + b37 + b44 + b50 + b55 + b59 + b62 + b64 + b65 = 2;

e22:    b24 + b29 + b55 <= 2;
