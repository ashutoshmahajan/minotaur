#  NLP written by GAMS Convert at 01/12/18 13:34:46
#  
#  Equation counts
#      Total        E        G        L        N        X        C        B
#         54        2       21       31        0        0        0        0
#  
#  Variable counts
#                   x        b        i      s1s      s2s       sc       si
#      Total     cont   binary  integer     sos1     sos2    scont     sint
#         18       18        0        0        0        0        0        0
#  FX      0        0        0        0        0        0        0        0
#  
#  Nonzero counts
#      Total    const       NL      DLL
#        149       63       86        0


var x1 := 0.81, >= 0.81, <= 23.2;
var x2 := 0.5, >= 0.5, <= 7.5;
var x3 := 0.5, >= 0.5, <= 2.4;
var x4 := 0.5, >= 0.5, <= 7.5;
var x5 := 0.5, >= 0.5, <= 2.4;
var x6 := 0.5, >= 0.5, <= 7.5;
var x7 := 0.5, >= 0.5, <= 2.4;
var x8 := 0.5, >= 0.5, <= 7.5;
var x9 := 0.5, >= 0.5, <= 2.4;
var x10 := 0.5, >= 0.5, <= 7.5;
var x11 := 0.5, >= 0.5, <= 2.4;
var x12 := 0.5, >= 0.5, <= 7.5;
var x13 := 0.5, >= 0.5, <= 2.4;
var x14 := 0.9, >= 0.9, <= 7.1;
var x15 := 0.9, >= 0.9, <= 2;
var x16 >= 0, <= 8;
var x17 >= 0, <= 2.9;
var x18 >= 0, <= 23.2;

minimize obj: x18;

subject to

e1:  - x1 + x18 = -7.25707902979242;

e2: -x16*x17 + x1 = 0;

e3: (x2 - x4)*(x2 - x4) + (x3 - x5)*(x3 - x5) >= 1;

e4: (x2 - x6)*(x2 - x6) + (x3 - x7)*(x3 - x7) >= 1;

e5: (x2 - x8)*(x2 - x8) + (x3 - x9)*(x3 - x9) >= 1;

e6: (x2 - x10)*(x2 - x10) + (x3 - x11)*(x3 - x11) >= 1;

e7: (x2 - x12)*(x2 - x12) + (x3 - x13)*(x3 - x13) >= 1;

e8: (x2 - x14)*(x2 - x14) + (x3 - x15)*(x3 - x15) >= 1.96;

e9: (x4 - x6)*(x4 - x6) + (x5 - x7)*(x5 - x7) >= 1;

e10: (x4 - x8)*(x4 - x8) + (x5 - x9)*(x5 - x9) >= 1;

e11: (x4 - x10)*(x4 - x10) + (x5 - x11)*(x5 - x11) >= 1;

e12: (x4 - x12)*(x4 - x12) + (x5 - x13)*(x5 - x13) >= 1;

e13: (x4 - x14)*(x4 - x14) + (x5 - x15)*(x5 - x15) >= 1.96;

e14: (x6 - x8)*(x6 - x8) + (x7 - x9)*(x7 - x9) >= 1;

e15: (x6 - x10)*(x6 - x10) + (x7 - x11)*(x7 - x11) >= 1;

e16: (x6 - x12)*(x6 - x12) + (x7 - x13)*(x7 - x13) >= 1;

e17: (x6 - x14)*(x6 - x14) + (x7 - x15)*(x7 - x15) >= 1.96;

e18: (x8 - x10)*(x8 - x10) + (x9 - x11)*(x9 - x11) >= 1;

e19: (x8 - x12)*(x8 - x12) + (x9 - x13)*(x9 - x13) >= 1;

e20: (x8 - x14)*(x8 - x14) + (x9 - x15)*(x9 - x15) >= 1.96;

e21: (x10 - x12)*(x10 - x12) + (x11 - x13)*(x11 - x13) >= 1;

e22: (x10 - x14)*(x10 - x14) + (x11 - x15)*(x11 - x15) >= 1.96;

e23: (x12 - x14)*(x12 - x14) + (x13 - x15)*(x13 - x15) >= 1.96;

e24:    x2 - x16 <= -0.5;

e25:    x3 - x17 <= -0.5;

e26:    x4 - x16 <= -0.5;

e27:    x5 - x17 <= -0.5;

e28:    x6 - x16 <= -0.5;

e29:    x7 - x17 <= -0.5;

e30:    x8 - x16 <= -0.5;

e31:    x9 - x17 <= -0.5;

e32:    x10 - x16 <= -0.5;

e33:    x11 - x17 <= -0.5;

e34:    x12 - x16 <= -0.5;

e35:    x13 - x17 <= -0.5;

e36:    x14 - x16 <= -0.9;

e37:    x15 - x17 <= -0.9;

e38:    x2 <= 4;

e39:    x3 <= 1.45;

e40:    x2 - x4 <= 0;

e41:    x2 - x6 <= 0;

e42:    x2 - x8 <= 0;

e43:    x2 - x10 <= 0;

e44:    x2 - x12 <= 0;

e45:    x4 - x6 <= 0;

e46:    x4 - x8 <= 0;

e47:    x4 - x10 <= 0;

e48:    x4 - x12 <= 0;

e49:    x6 - x8 <= 0;

e50:    x6 - x10 <= 0;

e51:    x6 - x12 <= 0;

e52:    x8 - x10 <= 0;

e53:    x8 - x12 <= 0;

e54:    x10 - x12 <= 0;
