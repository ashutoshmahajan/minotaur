#  MINLP written by GAMS Convert at 01/12/18 13:34:28
#  
#  Equation counts
#      Total        E        G        L        N        X        C        B
#         33       33        0        0        0        0        0        0
#  
#  Variable counts
#                   x        b        i      s1s      s2s       sc       si
#      Total     cont   binary  integer     sos1     sos2    scont     sint
#         97        1       96        0        0        0        0        0
#  FX      0        0        0        0        0        0        0        0
#  
#  Nonzero counts
#      Total    const       NL      DLL
#        193       97       96        0
# 
#  Reformulation has removed 1 variable and 1 equation


var b1 binary >= 0, <= 1;
var b2 binary >= 0, <= 1;
var b3 binary >= 0, <= 1;
var b4 binary >= 0, <= 1;
var b5 binary >= 0, <= 1;
var b6 binary >= 0, <= 1;
var b7 binary >= 0, <= 1;
var b8 binary >= 0, <= 1;
var b9 binary >= 0, <= 1;
var b10 binary >= 0, <= 1;
var b11 binary >= 0, <= 1;
var b12 binary >= 0, <= 1;
var b13 binary >= 0, <= 1;
var b14 binary >= 0, <= 1;
var b15 binary >= 0, <= 1;
var b16 binary >= 0, <= 1;
var b17 binary >= 0, <= 1;
var b18 binary >= 0, <= 1;
var b19 binary >= 0, <= 1;
var b20 binary >= 0, <= 1;
var b21 binary >= 0, <= 1;
var b22 binary >= 0, <= 1;
var b23 binary >= 0, <= 1;
var b24 binary >= 0, <= 1;
var b25 binary >= 0, <= 1;
var b26 binary >= 0, <= 1;
var b27 binary >= 0, <= 1;
var b28 binary >= 0, <= 1;
var b29 binary >= 0, <= 1;
var b30 binary >= 0, <= 1;
var b31 binary >= 0, <= 1;
var b32 binary >= 0, <= 1;
var b33 binary >= 0, <= 1;
var b34 binary >= 0, <= 1;
var b35 binary >= 0, <= 1;
var b36 binary >= 0, <= 1;
var b37 binary >= 0, <= 1;
var b38 binary >= 0, <= 1;
var b39 binary >= 0, <= 1;
var b40 binary >= 0, <= 1;
var b41 binary >= 0, <= 1;
var b42 binary >= 0, <= 1;
var b43 binary >= 0, <= 1;
var b44 binary >= 0, <= 1;
var b45 binary >= 0, <= 1;
var b46 binary >= 0, <= 1;
var b47 binary >= 0, <= 1;
var b48 binary >= 0, <= 1;
var b49 binary >= 0, <= 1;
var b50 binary >= 0, <= 1;
var b51 binary >= 0, <= 1;
var b52 binary >= 0, <= 1;
var b53 binary >= 0, <= 1;
var b54 binary >= 0, <= 1;
var b55 binary >= 0, <= 1;
var b56 binary >= 0, <= 1;
var b57 binary >= 0, <= 1;
var b58 binary >= 0, <= 1;
var b59 binary >= 0, <= 1;
var b60 binary >= 0, <= 1;
var b61 binary >= 0, <= 1;
var b62 binary >= 0, <= 1;
var b63 binary >= 0, <= 1;
var b64 binary >= 0, <= 1;
var b65 binary >= 0, <= 1;
var b66 binary >= 0, <= 1;
var b67 binary >= 0, <= 1;
var b68 binary >= 0, <= 1;
var b69 binary >= 0, <= 1;
var b70 binary >= 0, <= 1;
var b71 binary >= 0, <= 1;
var b72 binary >= 0, <= 1;
var b73 binary >= 0, <= 1;
var b74 binary >= 0, <= 1;
var b75 binary >= 0, <= 1;
var b76 binary >= 0, <= 1;
var b77 binary >= 0, <= 1;
var b78 binary >= 0, <= 1;
var b79 binary >= 0, <= 1;
var b80 binary >= 0, <= 1;
var b81 binary >= 0, <= 1;
var b82 binary >= 0, <= 1;
var b83 binary >= 0, <= 1;
var b84 binary >= 0, <= 1;
var b85 binary >= 0, <= 1;
var b86 binary >= 0, <= 1;
var b87 binary >= 0, <= 1;
var b88 binary >= 0, <= 1;
var b89 binary >= 0, <= 1;
var b90 binary >= 0, <= 1;
var b91 binary >= 0, <= 1;
var b92 binary >= 0, <= 1;
var b93 binary >= 0, <= 1;
var b94 binary >= 0, <= 1;
var b95 binary >= 0, <= 1;
var b96 binary >= 0, <= 1;

minimize obj: 13404*b1*b4 - 38067*b1*b10 - 37994*b1*b13 + 132593*b1*b25 + 79392
    *b1*b73 + 13404*b2*b5 - 38067*b2*b11 - 37994*b2*b14 + 132593*b2*b26 + 79392
    *b2*b74 + 13404*b3*b6 - 38067*b3*b12 - 37994*b3*b15 + 132593*b3*b27 + 79392
    *b3*b75 + 78283*b4*b7 - 172622*b4*b16 + 179157*b4*b28 - 10711*b4*b76 + 
    78283*b5*b8 - 172622*b5*b17 + 179157*b5*b29 - 10711*b5*b77 + 78283*b6*b9 - 
    172622*b6*b18 + 179157*b6*b30 - 10711*b6*b78 - 10967*b7*b10 + 133921*b7*b19
     + 47337*b7*b31 + 1785*b7*b79 - 10967*b8*b11 + 133921*b8*b20 + 47337*b8*b32
     + 1785*b8*b80 - 10967*b9*b12 + 133921*b9*b21 + 47337*b9*b33 + 1785*b9*b81
     - 11613*b10*b22 + 104508*b10*b34 + 176076*b10*b82 - 11613*b11*b23 + 104508
    *b11*b35 + 176076*b11*b83 - 11613*b12*b24 + 104508*b12*b36 + 176076*b12*b84
     - 42176*b13*b16 + 58524*b13*b22 - 127205*b13*b37 - 24282*b13*b85 - 42176*
    b14*b17 + 58524*b14*b23 - 127205*b14*b38 - 24282*b14*b86 - 42176*b15*b18 + 
    58524*b15*b24 - 127205*b15*b39 - 24282*b15*b87 - 248014*b16*b19 + 84578*b16
    *b40 - 92201*b16*b88 - 248014*b17*b20 + 84578*b17*b41 - 92201*b17*b89 - 
    248014*b18*b21 + 84578*b18*b42 - 92201*b18*b90 - 51957*b19*b22 - 48054*b19*
    b43 + 185246*b19*b91 - 51957*b20*b23 - 48054*b20*b44 + 185246*b20*b92 - 
    51957*b21*b24 - 48054*b21*b45 + 185246*b21*b93 + 93267*b22*b46 + 87901*b22*
    b94 + 93267*b23*b47 + 87901*b23*b95 + 93267*b24*b48 + 87901*b24*b96 - 95066
    *b25*b28 + 33787*b25*b34 + 129631*b25*b37 + 15164*b25*b49 - 95066*b26*b29
     + 33787*b26*b35 + 129631*b26*b38 + 15164*b26*b50 - 95066*b27*b30 + 33787*
    b27*b36 + 129631*b27*b39 + 15164*b27*b51 + 156011*b28*b31 + 6292*b28*b40 - 
    158477*b28*b52 + 156011*b29*b32 + 6292*b29*b41 - 158477*b29*b53 + 156011*
    b30*b33 + 6292*b30*b42 - 158477*b30*b54 - 82579*b31*b34 + 82989*b31*b43 + 
    112886*b31*b55 - 82579*b32*b35 + 82989*b32*b44 + 112886*b32*b56 - 82579*b33
    *b36 + 82989*b33*b45 + 112886*b33*b57 - 84274*b34*b46 + 82805*b34*b58 - 
    84274*b35*b47 + 82805*b35*b59 - 84274*b36*b48 + 82805*b36*b60 - 100604*b37*
    b40 + 9057*b37*b46 - 196710*b37*b61 - 100604*b38*b41 + 9057*b38*b47 - 
    196710*b38*b62 - 100604*b39*b42 + 9057*b39*b48 - 196710*b39*b63 - 51470*b40
    *b43 - 101195*b40*b64 - 51470*b41*b44 - 101195*b41*b65 - 51470*b42*b45 - 
    101195*b42*b66 + 52879*b43*b46 - 339*b43*b67 + 52879*b44*b47 - 339*b44*b68
     + 52879*b45*b48 - 339*b45*b69 - 162853*b46*b70 - 162853*b47*b71 - 162853*
    b48*b72 + 20286*b49*b52 - 113065*b49*b58 + 48095*b49*b61 + 88378*b49*b73 + 
    20286*b50*b53 - 113065*b50*b59 + 48095*b50*b62 + 88378*b50*b74 + 20286*b51*
    b54 - 113065*b51*b60 + 48095*b51*b63 + 88378*b51*b75 + 55522*b52*b55 - 
    30307*b52*b64 - 156874*b52*b76 + 55522*b53*b56 - 30307*b53*b65 - 156874*b53
    *b77 + 55522*b54*b57 - 30307*b54*b66 - 156874*b54*b78 - 57258*b55*b58 - 
    65625*b55*b67 - 100949*b55*b79 - 57258*b56*b59 - 65625*b56*b68 - 100949*b56
    *b80 - 57258*b57*b60 - 65625*b57*b69 - 100949*b57*b81 + 2223*b58*b70 + 
    86484*b58*b82 + 2223*b59*b71 + 86484*b59*b83 + 2223*b60*b72 + 86484*b60*b84
     + 124961*b61*b64 - 93699*b61*b70 + 210186*b61*b85 + 124961*b62*b65 - 93699
    *b62*b71 + 210186*b62*b86 + 124961*b63*b66 - 93699*b63*b72 + 210186*b63*b87
     - 70255*b64*b67 + 139841*b64*b88 - 70255*b65*b68 + 139841*b65*b89 - 70255*
    b66*b69 + 139841*b66*b90 + 180763*b67*b70 + 206568*b67*b91 + 180763*b68*b71
     + 206568*b68*b92 + 180763*b69*b72 + 206568*b69*b93 - 70318*b70*b94 - 70318
    *b71*b95 - 70318*b72*b96 - 142181*b73*b76 + 101279*b73*b82 + 114585*b73*b85
     - 142181*b74*b77 + 101279*b74*b83 + 114585*b74*b86 - 142181*b75*b78 + 
    101279*b75*b84 + 114585*b75*b87 - 110505*b76*b79 - 17501*b76*b88 - 110505*
    b77*b80 - 17501*b77*b89 - 110505*b78*b81 - 17501*b78*b90 + 43072*b79*b82 + 
    68163*b79*b91 + 43072*b80*b83 + 68163*b80*b92 + 43072*b81*b84 + 68163*b81*
    b93 - 27524*b82*b94 - 27524*b83*b95 - 27524*b84*b96 - 206078*b85*b88 + 
    128123*b85*b94 - 206078*b86*b89 + 128123*b86*b95 - 206078*b87*b90 + 128123*
    b87*b96 - 2068*b88*b91 - 2068*b89*b92 - 2068*b90*b93 + 151073*b91*b94 + 
    151073*b92*b95 + 151073*b93*b96;

subject to

e1:    b1 + b2 + b3 = 1;

e2:    b4 + b5 + b6 = 1;

e3:    b7 + b8 + b9 = 1;

e4:    b10 + b11 + b12 = 1;

e5:    b13 + b14 + b15 = 1;

e6:    b16 + b17 + b18 = 1;

e7:    b19 + b20 + b21 = 1;

e8:    b22 + b23 + b24 = 1;

e9:    b25 + b26 + b27 = 1;

e10:    b28 + b29 + b30 = 1;

e11:    b31 + b32 + b33 = 1;

e12:    b34 + b35 + b36 = 1;

e13:    b37 + b38 + b39 = 1;

e14:    b40 + b41 + b42 = 1;

e15:    b43 + b44 + b45 = 1;

e16:    b46 + b47 + b48 = 1;

e17:    b49 + b50 + b51 = 1;

e18:    b52 + b53 + b54 = 1;

e19:    b55 + b56 + b57 = 1;

e20:    b58 + b59 + b60 = 1;

e21:    b61 + b62 + b63 = 1;

e22:    b64 + b65 + b66 = 1;

e23:    b67 + b68 + b69 = 1;

e24:    b70 + b71 + b72 = 1;

e25:    b73 + b74 + b75 = 1;

e26:    b76 + b77 + b78 = 1;

e27:    b79 + b80 + b81 = 1;

e28:    b82 + b83 + b84 = 1;

e29:    b85 + b86 + b87 = 1;

e30:    b88 + b89 + b90 = 1;

e31:    b91 + b92 + b93 = 1;

e32:    b94 + b95 + b96 = 1;
