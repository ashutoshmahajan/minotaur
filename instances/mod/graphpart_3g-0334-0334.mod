#  MINLP written by GAMS Convert at 01/12/18 13:34:28
#  
#  Equation counts
#      Total        E        G        L        N        X        C        B
#         37       37        0        0        0        0        0        0
#  
#  Variable counts
#                   x        b        i      s1s      s2s       sc       si
#      Total     cont   binary  integer     sos1     sos2    scont     sint
#        109        1      108        0        0        0        0        0
#  FX      0        0        0        0        0        0        0        0
#  
#  Nonzero counts
#      Total    const       NL      DLL
#        217      109      108        0
# 
#  Reformulation has removed 1 variable and 1 equation


var b1 binary >= 0, <= 1;
var b2 binary >= 0, <= 1;
var b3 binary >= 0, <= 1;
var b4 binary >= 0, <= 1;
var b5 binary >= 0, <= 1;
var b6 binary >= 0, <= 1;
var b7 binary >= 0, <= 1;
var b8 binary >= 0, <= 1;
var b9 binary >= 0, <= 1;
var b10 binary >= 0, <= 1;
var b11 binary >= 0, <= 1;
var b12 binary >= 0, <= 1;
var b13 binary >= 0, <= 1;
var b14 binary >= 0, <= 1;
var b15 binary >= 0, <= 1;
var b16 binary >= 0, <= 1;
var b17 binary >= 0, <= 1;
var b18 binary >= 0, <= 1;
var b19 binary >= 0, <= 1;
var b20 binary >= 0, <= 1;
var b21 binary >= 0, <= 1;
var b22 binary >= 0, <= 1;
var b23 binary >= 0, <= 1;
var b24 binary >= 0, <= 1;
var b25 binary >= 0, <= 1;
var b26 binary >= 0, <= 1;
var b27 binary >= 0, <= 1;
var b28 binary >= 0, <= 1;
var b29 binary >= 0, <= 1;
var b30 binary >= 0, <= 1;
var b31 binary >= 0, <= 1;
var b32 binary >= 0, <= 1;
var b33 binary >= 0, <= 1;
var b34 binary >= 0, <= 1;
var b35 binary >= 0, <= 1;
var b36 binary >= 0, <= 1;
var b37 binary >= 0, <= 1;
var b38 binary >= 0, <= 1;
var b39 binary >= 0, <= 1;
var b40 binary >= 0, <= 1;
var b41 binary >= 0, <= 1;
var b42 binary >= 0, <= 1;
var b43 binary >= 0, <= 1;
var b44 binary >= 0, <= 1;
var b45 binary >= 0, <= 1;
var b46 binary >= 0, <= 1;
var b47 binary >= 0, <= 1;
var b48 binary >= 0, <= 1;
var b49 binary >= 0, <= 1;
var b50 binary >= 0, <= 1;
var b51 binary >= 0, <= 1;
var b52 binary >= 0, <= 1;
var b53 binary >= 0, <= 1;
var b54 binary >= 0, <= 1;
var b55 binary >= 0, <= 1;
var b56 binary >= 0, <= 1;
var b57 binary >= 0, <= 1;
var b58 binary >= 0, <= 1;
var b59 binary >= 0, <= 1;
var b60 binary >= 0, <= 1;
var b61 binary >= 0, <= 1;
var b62 binary >= 0, <= 1;
var b63 binary >= 0, <= 1;
var b64 binary >= 0, <= 1;
var b65 binary >= 0, <= 1;
var b66 binary >= 0, <= 1;
var b67 binary >= 0, <= 1;
var b68 binary >= 0, <= 1;
var b69 binary >= 0, <= 1;
var b70 binary >= 0, <= 1;
var b71 binary >= 0, <= 1;
var b72 binary >= 0, <= 1;
var b73 binary >= 0, <= 1;
var b74 binary >= 0, <= 1;
var b75 binary >= 0, <= 1;
var b76 binary >= 0, <= 1;
var b77 binary >= 0, <= 1;
var b78 binary >= 0, <= 1;
var b79 binary >= 0, <= 1;
var b80 binary >= 0, <= 1;
var b81 binary >= 0, <= 1;
var b82 binary >= 0, <= 1;
var b83 binary >= 0, <= 1;
var b84 binary >= 0, <= 1;
var b85 binary >= 0, <= 1;
var b86 binary >= 0, <= 1;
var b87 binary >= 0, <= 1;
var b88 binary >= 0, <= 1;
var b89 binary >= 0, <= 1;
var b90 binary >= 0, <= 1;
var b91 binary >= 0, <= 1;
var b92 binary >= 0, <= 1;
var b93 binary >= 0, <= 1;
var b94 binary >= 0, <= 1;
var b95 binary >= 0, <= 1;
var b96 binary >= 0, <= 1;
var b97 binary >= 0, <= 1;
var b98 binary >= 0, <= 1;
var b99 binary >= 0, <= 1;
var b100 binary >= 0, <= 1;
var b101 binary >= 0, <= 1;
var b102 binary >= 0, <= 1;
var b103 binary >= 0, <= 1;
var b104 binary >= 0, <= 1;
var b105 binary >= 0, <= 1;
var b106 binary >= 0, <= 1;
var b107 binary >= 0, <= 1;
var b108 binary >= 0, <= 1;

minimize obj: 150789*b1*b4 + 96635*b1*b7 + 82016*b1*b10 + 71188*b1*b19 + 29652*
    b1*b28 + 27563*b1*b82 + 150789*b2*b5 + 96635*b2*b8 + 82016*b2*b11 + 71188*
    b2*b20 + 29652*b2*b29 + 27563*b2*b83 + 150789*b3*b6 + 96635*b3*b9 + 82016*
    b3*b12 + 71188*b3*b21 + 29652*b3*b30 + 27563*b3*b84 - 138432*b4*b7 + 135804
    *b4*b13 - 33425*b4*b22 + 47873*b4*b31 + 37799*b4*b85 - 138432*b5*b8 + 
    135804*b5*b14 - 33425*b5*b23 + 47873*b5*b32 + 37799*b5*b86 - 138432*b6*b9
     + 135804*b6*b15 - 33425*b6*b24 + 47873*b6*b33 + 37799*b6*b87 + 89572*b7*
    b16 - 123622*b7*b25 + 36597*b7*b34 - 88889*b7*b88 + 89572*b8*b17 - 123622*
    b8*b26 + 36597*b8*b35 - 88889*b8*b89 + 89572*b9*b18 - 123622*b9*b27 + 36597
    *b9*b36 - 88889*b9*b90 - 28003*b10*b13 + 64386*b10*b16 + 15848*b10*b19 - 
    68711*b10*b37 + 20433*b10*b91 - 28003*b11*b14 + 64386*b11*b17 + 15848*b11*
    b20 - 68711*b11*b38 + 20433*b11*b92 - 28003*b12*b15 + 64386*b12*b18 + 15848
    *b12*b21 - 68711*b12*b39 + 20433*b12*b93 + 37906*b13*b16 - 100230*b13*b22
     - 12359*b13*b40 + 81013*b13*b94 + 37906*b14*b17 - 100230*b14*b23 - 12359*
    b14*b41 + 81013*b14*b95 + 37906*b15*b18 - 100230*b15*b24 - 12359*b15*b42 + 
    81013*b15*b96 - 137368*b16*b25 + 23213*b16*b43 + 23379*b16*b97 - 137368*b17
    *b26 + 23213*b17*b44 + 23379*b17*b98 - 137368*b18*b27 + 23213*b18*b45 + 
    23379*b18*b99 - 98974*b19*b22 + 231831*b19*b25 - 216126*b19*b46 - 217144*
    b19*b100 - 98974*b20*b23 + 231831*b20*b26 - 216126*b20*b47 - 217144*b20*
    b101 - 98974*b21*b24 + 231831*b21*b27 - 216126*b21*b48 - 217144*b21*b102 + 
    35848*b22*b25 - 56735*b22*b49 - 129635*b22*b103 + 35848*b23*b26 - 56735*b23
    *b50 - 129635*b23*b104 + 35848*b24*b27 - 56735*b24*b51 - 129635*b24*b105 + 
    110264*b25*b52 + 64614*b25*b106 + 110264*b26*b53 + 64614*b26*b107 + 110264*
    b27*b54 + 64614*b27*b108 - 57506*b28*b31 - 109539*b28*b34 - 153027*b28*b37
     + 74221*b28*b46 - 128728*b28*b55 - 57506*b29*b32 - 109539*b29*b35 - 153027
    *b29*b38 + 74221*b29*b47 - 128728*b29*b56 - 57506*b30*b33 - 109539*b30*b36
     - 153027*b30*b39 + 74221*b30*b48 - 128728*b30*b57 - 61441*b31*b34 - 38352*
    b31*b40 + 65016*b31*b49 - 87621*b31*b58 - 61441*b32*b35 - 38352*b32*b41 + 
    65016*b32*b50 - 87621*b32*b59 - 61441*b33*b36 - 38352*b33*b42 + 65016*b33*
    b51 - 87621*b33*b60 + 89808*b34*b43 + 202917*b34*b52 - 130041*b34*b61 + 
    89808*b35*b44 + 202917*b35*b53 - 130041*b35*b62 + 89808*b36*b45 + 202917*
    b36*b54 - 130041*b36*b63 + 33035*b37*b40 + 71965*b37*b43 - 55696*b37*b46 - 
    183316*b37*b64 + 33035*b38*b41 + 71965*b38*b44 - 55696*b38*b47 - 183316*b38
    *b65 + 33035*b39*b42 + 71965*b39*b45 - 55696*b39*b48 - 183316*b39*b66 + 
    77370*b40*b43 + 105654*b40*b49 + 32479*b40*b67 + 77370*b41*b44 + 105654*b41
    *b50 + 32479*b41*b68 + 77370*b42*b45 + 105654*b42*b51 + 32479*b42*b69 - 
    54817*b43*b52 + 23875*b43*b70 - 54817*b44*b53 + 23875*b44*b71 - 54817*b45*
    b54 + 23875*b45*b72 + 156987*b46*b49 - 97706*b46*b52 + 66291*b46*b73 + 
    156987*b47*b50 - 97706*b47*b53 + 66291*b47*b74 + 156987*b48*b51 - 97706*b48
    *b54 + 66291*b48*b75 - 170907*b49*b52 - 4284*b49*b76 - 170907*b50*b53 - 
    4284*b50*b77 - 170907*b51*b54 - 4284*b51*b78 - 52892*b52*b79 - 52892*b53*
    b80 - 52892*b54*b81 + 140020*b55*b58 + 172819*b55*b61 - 68559*b55*b64 + 
    127058*b55*b73 - 96654*b55*b82 + 140020*b56*b59 + 172819*b56*b62 - 68559*
    b56*b65 + 127058*b56*b74 - 96654*b56*b83 + 140020*b57*b60 + 172819*b57*b63
     - 68559*b57*b66 + 127058*b57*b75 - 96654*b57*b84 + 53214*b58*b61 + 113790*
    b58*b67 + 70369*b58*b76 + 40736*b58*b85 + 53214*b59*b62 + 113790*b59*b68 + 
    70369*b59*b77 + 40736*b59*b86 + 53214*b60*b63 + 113790*b60*b69 + 70369*b60*
    b78 + 40736*b60*b87 - 53179*b61*b70 - 40328*b61*b79 - 76183*b61*b88 - 53179
    *b62*b71 - 40328*b62*b80 - 76183*b62*b89 - 53179*b63*b72 - 40328*b63*b81 - 
    76183*b63*b90 + 128807*b64*b67 + 9873*b64*b70 - 163252*b64*b73 + 118598*b64
    *b91 + 128807*b65*b68 + 9873*b65*b71 - 163252*b65*b74 + 118598*b65*b92 + 
    128807*b66*b69 + 9873*b66*b72 - 163252*b66*b75 + 118598*b66*b93 + 26118*b67
    *b70 - 17710*b67*b76 - 47780*b67*b94 + 26118*b68*b71 - 17710*b68*b77 - 
    47780*b68*b95 + 26118*b69*b72 - 17710*b69*b78 - 47780*b69*b96 - 194573*b70*
    b79 + 79568*b70*b97 - 194573*b71*b80 + 79568*b71*b98 - 194573*b72*b81 + 
    79568*b72*b99 + 134721*b73*b76 - 43693*b73*b79 - 35040*b73*b100 + 134721*
    b74*b77 - 43693*b74*b80 - 35040*b74*b101 + 134721*b75*b78 - 43693*b75*b81
     - 35040*b75*b102 - 154491*b76*b79 + 126672*b76*b103 - 154491*b77*b80 + 
    126672*b77*b104 - 154491*b78*b81 + 126672*b78*b105 + 134687*b79*b106 + 
    134687*b80*b107 + 134687*b81*b108 - 20223*b82*b85 + 16042*b82*b88 - 71597*
    b82*b91 + 105213*b82*b100 - 20223*b83*b86 + 16042*b83*b89 - 71597*b83*b92
     + 105213*b83*b101 - 20223*b84*b87 + 16042*b84*b90 - 71597*b84*b93 + 105213
    *b84*b102 - 23477*b85*b88 + 131588*b85*b94 + 77329*b85*b103 - 23477*b86*b89
     + 131588*b86*b95 + 77329*b86*b104 - 23477*b87*b90 + 131588*b87*b96 + 77329
    *b87*b105 + 243127*b88*b97 + 106932*b88*b106 + 243127*b89*b98 + 106932*b89*
    b107 + 243127*b90*b99 + 106932*b90*b108 + 173520*b91*b94 - 14664*b91*b97 + 
    37621*b91*b100 + 173520*b92*b95 - 14664*b92*b98 + 37621*b92*b101 + 173520*
    b93*b96 - 14664*b93*b99 + 37621*b93*b102 - 95030*b94*b97 + 10313*b94*b103
     - 95030*b95*b98 + 10313*b95*b104 - 95030*b96*b99 + 10313*b96*b105 + 102942
    *b97*b106 + 102942*b98*b107 + 102942*b99*b108 - 244497*b100*b103 - 85233*
    b100*b106 - 244497*b101*b104 - 85233*b101*b107 - 244497*b102*b105 - 85233*
    b102*b108 - 96225*b103*b106 - 96225*b104*b107 - 96225*b105*b108;

subject to

e1:    b1 + b2 + b3 = 1;

e2:    b4 + b5 + b6 = 1;

e3:    b7 + b8 + b9 = 1;

e4:    b10 + b11 + b12 = 1;

e5:    b13 + b14 + b15 = 1;

e6:    b16 + b17 + b18 = 1;

e7:    b19 + b20 + b21 = 1;

e8:    b22 + b23 + b24 = 1;

e9:    b25 + b26 + b27 = 1;

e10:    b28 + b29 + b30 = 1;

e11:    b31 + b32 + b33 = 1;

e12:    b34 + b35 + b36 = 1;

e13:    b37 + b38 + b39 = 1;

e14:    b40 + b41 + b42 = 1;

e15:    b43 + b44 + b45 = 1;

e16:    b46 + b47 + b48 = 1;

e17:    b49 + b50 + b51 = 1;

e18:    b52 + b53 + b54 = 1;

e19:    b55 + b56 + b57 = 1;

e20:    b58 + b59 + b60 = 1;

e21:    b61 + b62 + b63 = 1;

e22:    b64 + b65 + b66 = 1;

e23:    b67 + b68 + b69 = 1;

e24:    b70 + b71 + b72 = 1;

e25:    b73 + b74 + b75 = 1;

e26:    b76 + b77 + b78 = 1;

e27:    b79 + b80 + b81 = 1;

e28:    b82 + b83 + b84 = 1;

e29:    b85 + b86 + b87 = 1;

e30:    b88 + b89 + b90 = 1;

e31:    b91 + b92 + b93 = 1;

e32:    b94 + b95 + b96 = 1;

e33:    b97 + b98 + b99 = 1;

e34:    b100 + b101 + b102 = 1;

e35:    b103 + b104 + b105 = 1;

e36:    b106 + b107 + b108 = 1;
