#  MINLP written by GAMS Convert at 01/12/18 13:34:37
#  
#  Equation counts
#      Total        E        G        L        N        X        C        B
#         80       60       10       10        0        0        0        0
#  
#  Variable counts
#                   x        b        i      s1s      s2s       sc       si
#      Total     cont   binary  integer     sos1     sos2    scont     sint
#         72       62       10        0        0        0        0        0
#  FX      2        2        0        0        0        0        0        0
#  
#  Nonzero counts
#      Total    const       NL      DLL
#        190      179       11        0
# 
#  Reformulation has removed 1 variable and 1 equation


var x1 := -1, >= -1, <= 1;
var x2 := -1, >= -1, <= 1;
var x3 := -1, >= -1, <= 1;
var x4 := -1, >= -1, <= 1;
var x5 := -1, >= -1, <= 1;
var x6 := -1, >= -1, <= 1;
var x7 := -1, >= -1, <= 1;
var x8 := -1, >= -1, <= 1;
var x9 := -1, >= -1, <= 1;
var x10 := -1, >= -1, <= 1;
var b11 binary >= 0, <= 1;
var b12 binary >= 0, <= 1;
var b13 binary >= 0, <= 1;
var b14 binary >= 0, <= 1;
var b15 binary >= 0, <= 1;
var b16 binary >= 0, <= 1;
var b17 binary >= 0, <= 1;
var b18 binary >= 0, <= 1;
var b19 binary >= 0, <= 1;
var b20 binary >= 0, <= 1;
var x21 := -2, >= -2, <= -2;
var x22 := -2;
var x23 := -2;
var x24 := -2;
var x25 := -2;
var x26 := -2;
var x27 := -2;
var x28 := -2;
var x29 := -2;
var x30 := -2;
var x31 >= 0, <= 0;
var x32 := 1;
var x33 := 1;
var x34 := 1;
var x35 := 1;
var x36 := 1;
var x37 := 1;
var x38 := 1;
var x39 := 1;
var x40 := 1;
var x41 := 1;
var x42 := 1;
var x43 := 1;
var x44 := 1;
var x45 := 1;
var x46 := 1;
var x47 := 1;
var x48 := 1;
var x49 := 1;
var x50 := 1;
var x51 := -2, >= -2, <= 2;
var x52 := -2, >= -2, <= 2;
var x53 := -2, >= -2, <= 2;
var x54 := -2, >= -2, <= 2;
var x55 := -2, >= -2, <= 2;
var x56 := -2, >= -2, <= 2;
var x57 := -2, >= -2, <= 2;
var x58 := -2, >= -2, <= 2;
var x59 := -2, >= -2, <= 2;
var x60 := -2, >= -2, <= 2;
var x61;
var x62;
var x63;
var x64;
var x65;
var x66;
var x67;
var x68;
var x69;
var x70;
var x71 := 1;

minimize obj: (-1.66666666666667 + x71)^2 + 0.2*x51^2 + 0.2*x52^2 + 0.2*x53^2
     + 0.2*x54^2 + 0.2*x55^2 + 0.2*x56^2 + 0.2*x57^2 + 0.2*x58^2 + 0.2*x59^2 + 
    0.2*x60^2;

subject to

e2:  - x31 + x41 = 0.2;

e3:  - x32 + x42 = 0.2;

e4:  - x33 + x43 = 0.2;

e5:  - x34 + x44 = 0.2;

e6:  - x35 + x45 = 0.2;

e7:  - x36 + x46 = 0.2;

e8:  - x37 + x47 = 0.2;

e9:  - x38 + x48 = 0.2;

e10:  - x39 + x49 = 0.2;

e11:  - x40 + x50 = 0.2;

e12:  - x21 + x51 - 0.2*x61 = 0;

e13:  - x22 + x52 - 0.2*x62 = 0;

e14:  - x23 + x53 - 0.2*x63 = 0;

e15:  - x24 + x54 - 0.2*x64 = 0;

e16:  - x25 + x55 - 0.2*x65 = 0;

e17:  - x26 + x56 - 0.2*x66 = 0;

e18:  - x27 + x57 - 0.2*x67 = 0;

e19:  - x28 + x58 - 0.2*x68 = 0;

e20:  - x29 + x59 - 0.2*x69 = 0;

e21:  - x30 + x60 - 0.2*x70 = 0;

e22:    x1 - 2*b11 = -1;

e23:    x2 - 2*b12 = -1;

e24:    x3 - 2*b13 = -1;

e25:    x4 - 2*b14 = -1;

e26:    x5 - 2*b15 = -1;

e27:    x6 - 2*b16 = -1;

e28:    x7 - 2*b17 = -1;

e29:    x8 - 2*b18 = -1;

e30:    x9 - 2*b19 = -1;

e31:    x10 - 2*b20 = -1;

e32:    2*b11 - x51 <= 2;

e33:    2*b12 - x52 <= 2;

e34:    2*b13 - x53 <= 2;

e35:    2*b14 - x54 <= 2;

e36:    2*b15 - x55 <= 2;

e37:    2*b16 - x56 <= 2;

e38:    2*b17 - x57 <= 2;

e39:    2*b18 - x58 <= 2;

e40:    2*b19 - x59 <= 2;

e41:    2*b20 - x60 <= 2;

e42:    2*b11 - x51 >= 0;

e43:    2*b12 - x52 >= 0;

e44:    2*b13 - x53 >= 0;

e45:    2*b14 - x54 >= 0;

e46:    2*b15 - x55 >= 0;

e47:    2*b16 - x56 >= 0;

e48:    2*b17 - x57 >= 0;

e49:    2*b18 - x58 >= 0;

e50:    2*b19 - x59 >= 0;

e51:    2*b20 - x60 >= 0;

e52:  - x31 + x32 = 0.2;

e53:  - x32 + x33 = 0.2;

e54:  - x33 + x34 = 0.2;

e55:  - x34 + x35 = 0.2;

e56:  - x35 + x36 = 0.2;

e57:  - x36 + x37 = 0.2;

e58:  - x37 + x38 = 0.2;

e59:  - x38 + x39 = 0.2;

e60:  - x39 + x40 = 0.2;

e61:  - x21 + x22 - 0.2*x61 = 0;

e62:  - x22 + x23 - 0.2*x62 = 0;

e63:  - x23 + x24 - 0.2*x63 = 0;

e64:  - x24 + x25 - 0.2*x64 = 0;

e65:  - x25 + x26 - 0.2*x65 = 0;

e66:  - x26 + x27 - 0.2*x66 = 0;

e67:  - x27 + x28 - 0.2*x67 = 0;

e68:  - x28 + x29 - 0.2*x68 = 0;

e69:  - x29 + x30 - 0.2*x69 = 0;

e70:  - x30 - 0.2*x70 + x71 = 0;

e71:    x1 + x61 = 2;

e72:    x2 + x62 = 2;

e73:    x3 + x63 = 2;

e74:    x4 + x64 = 2;

e75:    x5 + x65 = 2;

e76:    x6 + x66 = 2;

e77:    x7 + x67 = 2;

e78:    x8 + x68 = 2;

e79:    x9 + x69 = 2;

e80:    x10 + x70 = 2;
