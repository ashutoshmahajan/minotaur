#  MINLP written by GAMS Convert at 01/12/18 13:34:27
#  
#  Equation counts
#      Total        E        G        L        N        X        C        B
#         25       25        0        0        0        0        0        0
#  
#  Variable counts
#                   x        b        i      s1s      s2s       sc       si
#      Total     cont   binary  integer     sos1     sos2    scont     sint
#         73        1       72        0        0        0        0        0
#  FX      0        0        0        0        0        0        0        0
#  
#  Nonzero counts
#      Total    const       NL      DLL
#        145       73       72        0
# 
#  Reformulation has removed 1 variable and 1 equation


var b1 binary >= 0, <= 1;
var b2 binary >= 0, <= 1;
var b3 binary >= 0, <= 1;
var b4 binary >= 0, <= 1;
var b5 binary >= 0, <= 1;
var b6 binary >= 0, <= 1;
var b7 binary >= 0, <= 1;
var b8 binary >= 0, <= 1;
var b9 binary >= 0, <= 1;
var b10 binary >= 0, <= 1;
var b11 binary >= 0, <= 1;
var b12 binary >= 0, <= 1;
var b13 binary >= 0, <= 1;
var b14 binary >= 0, <= 1;
var b15 binary >= 0, <= 1;
var b16 binary >= 0, <= 1;
var b17 binary >= 0, <= 1;
var b18 binary >= 0, <= 1;
var b19 binary >= 0, <= 1;
var b20 binary >= 0, <= 1;
var b21 binary >= 0, <= 1;
var b22 binary >= 0, <= 1;
var b23 binary >= 0, <= 1;
var b24 binary >= 0, <= 1;
var b25 binary >= 0, <= 1;
var b26 binary >= 0, <= 1;
var b27 binary >= 0, <= 1;
var b28 binary >= 0, <= 1;
var b29 binary >= 0, <= 1;
var b30 binary >= 0, <= 1;
var b31 binary >= 0, <= 1;
var b32 binary >= 0, <= 1;
var b33 binary >= 0, <= 1;
var b34 binary >= 0, <= 1;
var b35 binary >= 0, <= 1;
var b36 binary >= 0, <= 1;
var b37 binary >= 0, <= 1;
var b38 binary >= 0, <= 1;
var b39 binary >= 0, <= 1;
var b40 binary >= 0, <= 1;
var b41 binary >= 0, <= 1;
var b42 binary >= 0, <= 1;
var b43 binary >= 0, <= 1;
var b44 binary >= 0, <= 1;
var b45 binary >= 0, <= 1;
var b46 binary >= 0, <= 1;
var b47 binary >= 0, <= 1;
var b48 binary >= 0, <= 1;
var b49 binary >= 0, <= 1;
var b50 binary >= 0, <= 1;
var b51 binary >= 0, <= 1;
var b52 binary >= 0, <= 1;
var b53 binary >= 0, <= 1;
var b54 binary >= 0, <= 1;
var b55 binary >= 0, <= 1;
var b56 binary >= 0, <= 1;
var b57 binary >= 0, <= 1;
var b58 binary >= 0, <= 1;
var b59 binary >= 0, <= 1;
var b60 binary >= 0, <= 1;
var b61 binary >= 0, <= 1;
var b62 binary >= 0, <= 1;
var b63 binary >= 0, <= 1;
var b64 binary >= 0, <= 1;
var b65 binary >= 0, <= 1;
var b66 binary >= 0, <= 1;
var b67 binary >= 0, <= 1;
var b68 binary >= 0, <= 1;
var b69 binary >= 0, <= 1;
var b70 binary >= 0, <= 1;
var b71 binary >= 0, <= 1;
var b72 binary >= 0, <= 1;

minimize obj: 36391*b1*b4 - 56023*b1*b7 - 30587*b1*b10 + 43940*b1*b19 + 103654*
    b1*b55 + 36391*b2*b5 - 56023*b2*b8 - 30587*b2*b11 + 43940*b2*b20 + 103654*
    b2*b56 + 36391*b3*b6 - 56023*b3*b9 - 30587*b3*b12 + 43940*b3*b21 + 103654*
    b3*b57 - 42004*b4*b7 - 64233*b4*b13 + 75921*b4*b22 + 137016*b4*b58 - 42004*
    b5*b8 - 64233*b5*b14 + 75921*b5*b23 + 137016*b5*b59 - 42004*b6*b9 - 64233*
    b6*b15 + 75921*b6*b24 + 137016*b6*b60 + 140585*b7*b16 + 145261*b7*b25 + 
    13442*b7*b61 + 140585*b8*b17 + 145261*b8*b26 + 13442*b8*b62 + 140585*b9*b18
     + 145261*b9*b27 + 13442*b9*b63 - 67931*b10*b13 + 216581*b10*b16 + 52450*
    b10*b28 - 12680*b10*b64 - 67931*b11*b14 + 216581*b11*b17 + 52450*b11*b29 - 
    12680*b11*b65 - 67931*b12*b15 + 216581*b12*b18 + 52450*b12*b30 - 12680*b12*
    b66 - 40867*b13*b16 + 53965*b13*b31 + 127982*b13*b67 - 40867*b14*b17 + 
    53965*b14*b32 + 127982*b14*b68 - 40867*b15*b18 + 53965*b15*b33 + 127982*b15
    *b69 + 8603*b16*b34 + 161176*b16*b70 + 8603*b17*b35 + 161176*b17*b71 + 8603
    *b18*b36 + 161176*b18*b72 - 30437*b19*b22 + 49122*b19*b25 + 43433*b19*b28
     - 16626*b19*b37 - 30437*b20*b23 + 49122*b20*b26 + 43433*b20*b29 - 16626*
    b20*b38 - 30437*b21*b24 + 49122*b21*b27 + 43433*b21*b30 - 16626*b21*b39 - 
    145961*b22*b25 - 15003*b22*b31 + 129731*b22*b40 - 145961*b23*b26 - 15003*
    b23*b32 + 129731*b23*b41 - 145961*b24*b27 - 15003*b24*b33 + 129731*b24*b42
     - 183464*b25*b34 - 186557*b25*b43 - 183464*b26*b35 - 186557*b26*b44 - 
    183464*b27*b36 - 186557*b27*b45 + 29786*b28*b31 - 313633*b28*b34 - 39968*
    b28*b46 + 29786*b29*b32 - 313633*b29*b35 - 39968*b29*b47 + 29786*b30*b33 - 
    313633*b30*b36 - 39968*b30*b48 + 91033*b31*b34 - 84205*b31*b49 + 91033*b32*
    b35 - 84205*b32*b50 + 91033*b33*b36 - 84205*b33*b51 - 41917*b34*b52 - 41917
    *b35*b53 - 41917*b36*b54 - 53775*b37*b40 - 94936*b37*b43 + 17605*b37*b46 + 
    103658*b37*b55 - 53775*b38*b41 - 94936*b38*b44 + 17605*b38*b47 + 103658*b38
    *b56 - 53775*b39*b42 - 94936*b39*b45 + 17605*b39*b48 + 103658*b39*b57 + 
    73358*b40*b43 + 51387*b40*b49 - 101209*b40*b58 + 73358*b41*b44 + 51387*b41*
    b50 - 101209*b41*b59 + 73358*b42*b45 + 51387*b42*b51 - 101209*b42*b60 + 
    77521*b43*b52 + 108709*b43*b61 + 77521*b44*b53 + 108709*b44*b62 + 77521*b45
    *b54 + 108709*b45*b63 - 97439*b46*b49 - 217980*b46*b52 + 163226*b46*b64 - 
    97439*b47*b50 - 217980*b47*b53 + 163226*b47*b65 - 97439*b48*b51 - 217980*
    b48*b54 + 163226*b48*b66 + 5548*b49*b52 - 93151*b49*b67 + 5548*b50*b53 - 
    93151*b50*b68 + 5548*b51*b54 - 93151*b51*b69 + 208299*b52*b70 + 208299*b53*
    b71 + 208299*b54*b72 + 16385*b55*b58 + 6737*b55*b61 - 94240*b55*b64 + 16385
    *b56*b59 + 6737*b56*b62 - 94240*b56*b65 + 16385*b57*b60 + 6737*b57*b63 - 
    94240*b57*b66 - 51575*b58*b61 - 158490*b58*b67 - 51575*b59*b62 - 158490*b59
    *b68 - 51575*b60*b63 - 158490*b60*b69 - 26327*b61*b70 - 26327*b62*b71 - 
    26327*b63*b72 + 136319*b64*b67 + 56292*b64*b70 + 136319*b65*b68 + 56292*b65
    *b71 + 136319*b66*b69 + 56292*b66*b72 - 47852*b67*b70 - 47852*b68*b71 - 
    47852*b69*b72;

subject to

e1:    b1 + b2 + b3 = 1;

e2:    b4 + b5 + b6 = 1;

e3:    b7 + b8 + b9 = 1;

e4:    b10 + b11 + b12 = 1;

e5:    b13 + b14 + b15 = 1;

e6:    b16 + b17 + b18 = 1;

e7:    b19 + b20 + b21 = 1;

e8:    b22 + b23 + b24 = 1;

e9:    b25 + b26 + b27 = 1;

e10:    b28 + b29 + b30 = 1;

e11:    b31 + b32 + b33 = 1;

e12:    b34 + b35 + b36 = 1;

e13:    b37 + b38 + b39 = 1;

e14:    b40 + b41 + b42 = 1;

e15:    b43 + b44 + b45 = 1;

e16:    b46 + b47 + b48 = 1;

e17:    b49 + b50 + b51 = 1;

e18:    b52 + b53 + b54 = 1;

e19:    b55 + b56 + b57 = 1;

e20:    b58 + b59 + b60 = 1;

e21:    b61 + b62 + b63 = 1;

e22:    b64 + b65 + b66 = 1;

e23:    b67 + b68 + b69 = 1;

e24:    b70 + b71 + b72 = 1;
